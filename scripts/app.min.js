"use strict";
angular.module("longCalculatorApp", ["ngRoute", "ngAnimate", "angularGrid"]).config(["$routeProvider", function(a) { a.when("/acerca", { templateUrl: "views/acerca.html", controller: "AboutCtrl" }).when("/calculator/:mode", { templateUrl: "views/calculator.html", controller: "calculatorCtrl" }).when("/windows", { templateUrl: "views/windows.html", controller: "windowsCtrl" }).when("/glasses", { templateUrl: "views/glasses.html", controller: "glassesCtrl" }).when("/cuts", { templateUrl: "views/cuts.html", controller: "cutsCtrl" }).otherwise({ redirectTo: "/windows" }) }]), angular.module("longCalculatorApp").controller("AboutCtrl", ["$scope", function(a) { a.awesomeThings = ["HTML5 Boilerplate", "AngularJS", "Karma"] }]), angular.module("longCalculatorApp").controller("calculatorCtrl", ["$scope", "$routeParams", "windowsInfo", "cutsInfo", "LongsSorter", function(a, b, c, d, e) {
    function f(b) {
        "windowMode" === a.mode ? a.sticksSizes = c.getSticksSizes(b) : "generalMode" === a.mode && (a.sticksSizes = d.getSticksSizes(b));
        var f = a.sticksSizes[0];
        a.sticksSizes.splice(0, 1), a.sticksSizes = _.filter(a.sticksSizes, function(a) { return 0 != a }), a.sticksSizes.sort(function(a, b) { return a - b }), a.sticksSizes.push(f), "windowMode" === a.mode ? a.longObjects = c.getLongs(b) : "generalMode" === a.mode && (a.longObjects = d.getLongs(b));
        for (var h = 0; h < a.longObjects.length; h++) {
            a.longObjects[h].value += k;
            var i = a.longObjects[h].value;
            console.log(i)
        }
        a.longRows = _.pluck(a.longObjects, "value"), j = e.sortLongs(a.longObjects, a.sticksSizes), j || (j = []), g()
    }

    function g() {
        if (0 == j.length) return void(a.sticksDetails = []);
        a.sticksDetails = [];
        var b = 0,
            c = 1,
            d = 0,
            e = 0;
        for (a.sticksDetails.push({ numberOfStick: 1, stickLong: a.sticksSizes[0], values: [], lostMilimeters: a.sticksSizes[0] }); e < j.length;) b += parseFloat(j[e].value), b <= a.sticksSizes[d] ? (a.sticksDetails[c - 1].values.push(j[e]), a.sticksDetails[c - 1].lostMilimeters = (a.sticksSizes[d] - b).toFixed(1), e++) : (b = 0, c++, d < a.sticksSizes.length - 1 && (0 == a.sticksDetails[c - 2].values.length && a.sticksDetails[c - 2].values.push({ name: "-----", value: "-----" }), d++), a.sticksDetails.push({ numberOfStick: c, stickLong: a.sticksSizes[d], values: [], lostMilimeters: a.sticksSizes[d] }));
        for (var e = 0; e < a.sticksDetails.length; e++)
            for (var f = a.sticksDetails[e], g = 0; g < f.values.length; g++) "-----" != f.values[g].value && (f.values[g].value = f.values[g].value - k)
    }

    function h() {
        var a = new Kinetic.Stage({ container: "sticksCanvas", width: 800, height: 700 }),
            b = new Kinetic.Layer,
            c = new Kinetic.Layer,
            d = new Kinetic.Text({ text: "Numero", x: 5, y: 5, fontFamily: "Calibri", fontSize: 18, padding: 5, fill: "white" }),
            e = new Kinetic.Text({ text: "Longitud", x: 70, y: 5, fontFamily: "Calibri", fontSize: 18, padding: 5, fill: "white" }),
            f = new Kinetic.Text({ text: "Cortes", x: 300, y: 5, fontFamily: "Calibri", fontSize: 18, padding: 5, fill: "white" });
        b.add(d), b.add(e), b.add(f), i(a, b, c), a.add(b), a.add(c)
    }

    function i(b, c, d) {
        for (var e = 0; e < a.sticksDetails.length; e++) {
            var f = a.sticksDetails[e],
                g = f.numberOfStick,
                h = f.stickLong,
                i = _.max(a.sticksSizes, function(a) { return a }),
                j = new Kinetic.Text({ text: f.numberOfStick, x: 5, y: 30 * g, fontFamily: "Calibri", fontSize: 15, padding: 5, fill: "white" });
            c.add(j);
            var l = new Kinetic.Text({ text: f.stickLong, x: 70, y: 30 * g, fontFamily: "Calibri", fontSize: 15, padding: 5, fill: "white" });
            c.add(l);
            var m = new Kinetic.Rect({ x: 135, y: 30 * g + 8, stroke: "#ffffff", strokeWidth: 1, width: 500 * h / i, height: 10, shadowColor: "black", shadowBlur: 1, shadowOffset: { x: 1, y: 1 }, shadowOpacity: .2, cornerRadius: 1 });
            if (m.lostMilimeters = f.lostMilimeters, m.numberOfStick = f.numberOfStick, c.add(m), m.on("mousemove", function(a) {
                    var d = b.getPointerPosition();
                    t.position({ x: d.x - 170, y: d.y + 5 }), t.getText().text("Barra: " + this.numberOfStick + "\nPerdida:" + this.lostMilimeters + " [mm]"), t.show(), c.draw()
                }), m.on("mouseout", function() { t.hide(), c.batchDraw() }), f.values.length > 0 && "-----" != f.values[0].name) {
                a.canvasData.lastXposition = 135;
                for (var n = 0; n < f.values.length; n++) {
                    var o = f.values[n].value,
                        p = new Kinetic.Rect({ x: a.canvasData.lastXposition, y: 30 * g + 8, stroke: "#ffffff", strokeWidth: 2, fill: "#ddd", width: 500 * o / i, height: 10 });
                    p.name = f.values[n].name, p.value = f.values[n].value, p.numberOfStick = f.numberOfStick, a.canvasData.lastXposition += 500 * o / i, c.add(p), p.on("mousemove", function() {
                        var a = b.getPointerPosition();
                        t.position({ x: a.x + 10, y: a.y + 5 }), t.getText().text("Barra: " + this.numberOfStick + "\nVentana: " + this.name + "\nLongitud: " + this.value + " [mm]"), t.show(), c.draw()
                    }), p.on("mouseout", function() { t.hide(), c.draw() })
                }
                a.canvasData.lastXposition = 135;
                for (var q = 0; q < f.values.length; q++) {
                    var o = f.values[q].value;
                    a.canvasData.lastXposition += 500 * o / i;
                    var r = new Kinetic.Rect({ x: a.canvasData.lastXposition, y: 30 * g + 8 - 5, stroke: "#FF0000", strokeWidth: 1, width: 1, height: 20, cornerRadius: 1 });
                    c.add(r)
                }
                var s = new Kinetic.Rect({ x: a.canvasData.lastXposition + 2, y: 30 * g + 8, stroke: "yellow", strokeWidth: 0, fill: "yellow", width: f.values.length * k * 500 / i, height: 10 });
                c.add(s);
                var t = new Kinetic.Label({ opacity: .75, visible: !1 });
                t.add(new Kinetic.Tag({ fill: "black", shadowOpacity: .5 })), t.add(new Kinetic.Text({ text: "", fontFamily: "Calibri", fontSize: 18, padding: 5, fill: "white" })), c.add(t)
            }
        }
    }
    a.mode = b.mode, a.longValue = "", a.windowsPartsNames = c.getWindowsPartsNames(), a.selectedWindowPart = a.windowsPartsNames[0], a.sticksSizes = c.getSticksSizes(a.selectedWindowPart), a.canvasData = { numberOfSticks: 1, accumulatedMilimeters: 0, lastXposition: 5 }, a.longObjects = c.getLongs(a.selectedWindowPart), a.longRows = _.pluck(a.longObjects, "value"), a.sticksDetails = [];
    var j = [],
        k = 4;
    a.windowPartDetails = function(a) { f(a), j = [] }, a.refreshCanvas = function() { "windowMode" === a.mode ? a.selectedWindowPart = a.windowsPartsNames[0] : "generalMode" === a.mode && (a.cutsPartsNames = d.getPartsNames(), a.selectedWindowPart = a.cutsPartsNames[0]), f(a.selectedWindowPart), h(), j = [] }, a.refreshCanvas()
}]), angular.module("longCalculatorApp").controller("cutsCtrl", ["$scope", "cutsInfo", function(a, b) {
    function c(a, b, c) { var d = "rgba(" + a + ",0.2)"; return { background: d, color: "#555555" } }

    function d(b) {
        for (var c = a.configGridOptions.rowData[0], d = _.reject(_.keys(c), function(a) { return "property" == a }), e = 0; e < d.length; e++) {
            var f = d[e];
            if (b["long"] > c[f]) return void(a.error = "La longitud del corte es muy largo");
            a.error = ""
        }
    }
    a.newCutProperties = {};
    var e = b.getCuts(),
        f = b.getConfig();
    a.gridOptions = { rowData: e, rowSelection: "single", angularCompileRows: !0, groupHeaders: !0, columnDefs: [{ field: "name", headerName: "Nombre", headerGroup: "Barras", editable: !1, width: 420, cellStyle: c("0, 0, 255") }, { field: "long", headerName: "Longitud", headerGroup: "Longitud", editable: !1, width: 420, cellStyle: c("255, 0, 0") }] }, a.configGridOptions = { rowData: f, rowSelection: "single", columnDefs: [{ field: "property", headerName: "Propiedad", editable: !0, width: 420, cellStyle: c("0, 0, 255") }, { field: "longitud", headerName: "Longitud", editable: !0, width: 420, cellStyle: c("165, 42, 42") }] }, a.addNewCut = function() {
        var c = { name: a.newCutProperties.name, "long": a.newCutProperties["long"] };
        d(c), "" == a.error && b.addCut(c), a.gridOptions.api.onNewRows()
    }, a.removeCut = function() {
        var b = a.gridOptions.selectedRows[0],
            c = e.indexOf(b);
        e.splice(c, 1), a.gridOptions.api.onNewRows()
    }, a.addNewConfiguration = function() { f.push({ property: "Restos", "long": 0 }), a.configGridOptions.api.onNewRows() }, a.saveData = function() { b.saveData(e, f) }
}]), angular.module("longCalculatorApp").controller("glassesCtrl", ["$scope", "glassesInfo", function(a, b) {
    function c(a, b, c) { var d = "rgba(" + a + ",0.2)"; return { background: d, color: "#555555" } }
    var d = b.getGlasses();
    a.gridOptions = { rowData: d, rowSelection: "single", angularCompileRows: !0, groupHeaders: !0, columnDefs: [{ field: "id", headerName: "Codigo", headerGroup: "Ventanas", editable: !1, width: 80, cellStyle: c("0, 0, 255") }, { field: "name", headerName: "Nombre", headerGroup: "Ventanas", editable: !1, width: 150, cellStyle: c("0, 0, 255") }, { field: "widthFixedWindowGlass", headerName: "Ancho", headerGroup: "Vidrio Ventana Fija", editable: !1, width: 100, cellStyle: c("255, 0, 0") }, { field: "heightFixedWindowGlass", headerName: "Alto", headerGroup: "Vidrio Ventana Fija", editable: !1, width: 100, cellStyle: c("255, 0, 0") }, { field: "partsFixedWindowGlass", headerName: "Piezas", headerGroup: "Vidrio Ventana Fija", editable: !1, width: 100, cellStyle: c("255, 0, 0") }, { field: "widthSlidingWindowGlass", headerName: "Ancho", headerGroup: "Vidrio Ventana Corrediza", editable: !1, width: 100, cellStyle: c("0, 255, 0") }, { field: "heightSlidingWindowGlass", headerName: "Alto", headerGroup: "Vidrio Ventana Corrediza", editable: !1, width: 100, cellStyle: c("0, 255, 0") }, { field: "partsSlidingWindowGlass", headerName: "Piezas", headerGroup: "Vidrio Ventana Corrediza", editable: !1, width: 100, cellStyle: c("0, 255, 0") }] }
}]), angular.module("longCalculatorApp").controller("MainCtrl", ["$scope", function(a) { a.awesomeThings = ["HTML5 Boilerplate", "AngularJS", "Karma"] }]), angular.module("longCalculatorApp").controller("saveDocumentCtrl", ["$scope", "windowsInfo", "cutsInfo", "glassesInfo", function(a, b, c, d) {
    function e() {
        var e = new jsPDF("p", "pt", "legal"),
            g = 50,
            h = "",
            i = [{ dataKey: "numberOfStick", title: "Numero de la Barra" }, { dataKey: "stickLong", title: "Longitud de\nla Barra" }, { dataKey: "lostMilimeters", title: "Perdida [mm]" }, { dataKey: "window", title: "Ventana" }, { dataKey: "long", title: "Corte [mm]" }],
            j = [{ dataKey: "id", title: "Codigo" }, { dataKey: "name", title: "Nombre" }, { dataKey: "widthFixedWindowGlass", title: "Ancho\nVidrio\nFijo" }, { dataKey: "heightFixedWindowGlass", title: "Alto\nVidrio\nFijo" }, { dataKey: "partsFixedWindowGlass", title: "Partes\nVidrio\nFijo" }, { dataKey: "widthSlidingWindowGlass", title: "Ancho\nVidrio\nCorredizo" }, { dataKey: "heightSlidingWindowGlass", title: "Alto\nVidrio\nCorredizo" }, { dataKey: "partsSlidingWindowGlass", title: "Partes\nVidrio\nCorredizo" }],
            k = d.getGlasses(),
            l = a.selectedWindowPart;
        e.setFont("Courier"), e.setFontType("Bold"), e.setFontSize(16), e.text("        TABLA DE CORTE         ", 150, g), e.setFontSize(20), "windowMode" === a.mode ? a.windowsPartsNames = b.getWindowsPartsNames() : "generalMode" === a.mode && (a.windowsPartsNames = c.getPartsNames()), console.log(a.windowsPartsNames.length);
        for (var m = 0; m < a.windowsPartsNames.length; m++) {
            var n = a.windowsPartsNames[m];
            a.windowPartDetails(n);
            var o = f(a.sticksDetails);
            h = n, e.autoTable(i, o, {
                startY: g + 80,
                styles: { fillStyle: "DF", lineColor: [0, 0, 0], lineWidth: .5, valign: "middle" },
                headerStyles: { fontSize: 12, fillColor: [205, 100, 63], halign: "center" },
                bodyStyles: { fontSize: 10, lineWidth: .5, halign: "left", rowHeight: 18 },
                drawRow: function(a, b) {
                    if (0 === a.index) {
                        a.y = a.y - 70;
                        var c = b.settings.margin.left + b.table.width / 2,
                            d = a.y + 5 + a.height / 2;
                        e.rect(b.settings.margin.left, a.y, b.table.width, 24, "F"), e.autoTableText("Tabla de corte para perfil: " + h, c, d, { halign: "center", valign: "middle" })
                    }
                },
                createdCell: function(a, b) { o[b.row.index].numberOfStick % 2 === 0 ? (a.styles.fillColor = [225, 225, 225], a.styles.fontStyle = "bold") : a.styles.fillColor = [255, 255, 255] }
            }), g = e.autoTableEndPosY()
        }
        e.autoTable(j, k, {
            startY: g + 80,
            pageBreak: "always",
            styles: { fillStyle: "DF", lineColor: [0, 0, 0], lineWidth: .5, valign: "middle" },
            headerStyles: { fontSize: 10, fillColor: [205, 100, 63], halign: "center" },
            bodyStyles: { fontSize: 8, lineWidth: .5, halign: "left", rowHeight: 15 },
            drawRow: function(a, b) {
                if (0 === a.index) {
                    a.y = a.y - 70;
                    var c = b.settings.margin.left + b.table.width / 2,
                        d = a.y + 5 + a.height / 2;
                    e.rect(b.settings.margin.left, a.y, b.table.width, 30, "F"), e.autoTableText("Vidrios", c, d, { halign: "center", valign: "middle" })
                }
            },
			
            createdCell: function(a, b) { b.row.index % 2 === 0 ? (a.styles.fillColor = [225, 225, 225], a.styles.fontStyle = "bold") : a.styles.fillColor = [255, 255, 255] }
        }), e.save("Reporte .pdf"), a.windowPartDetails(l)
    }

    function f(a) {
        for (var b = [], c = 0; c < a.length; c++)
            for (var d = a[c], e = 0; e < d.values.length; e++) b.push({ numberOfStick: d.numberOfStick, stickLong: d.stickLong, window: d.values[e].name, "long": d.values[e].value, lostMilimeters: d.lostMilimeters, quantityLongsOfStick: d.values.length });
        return b
    }
    a.saveDocument = function() { e() }
}]), angular.module("longCalculatorApp").controller("windowsCtrl", ["$scope", "windowsInfo", "windowsFactory", "glassesInfo", function(a, b, c, d) {
    function e(b) {
        for (var c = a.configGridOptions.rowData[0], d = _.reject(_.keys(c), function(a) { return "property" == a }), e = 0; e < d.length; e++) {
            var f = d[e];
            if ("cabezal" == f || "socalo" == f) { if (b[f + "Fijo"]["long"] > c[f] || b[f + "Corredizo"]["long"] > c[f]) return void(a.error = "El ancho o el alto es demasiado grande, longitud de las barra " + f + " muy pequeño") } else {
                if (b[f]["long"] > c[f]) return void(a.error = "El ancho o el alto es demasiado grande, longitud de las barra " + f + " muy pequeño");
                a.error = ""
            }
        }
    }

    function f(a, b, c) { var d = "rgba(" + a + ",0.2)"; return { background: d, color: "#555555" } }
    a.numberFrames = ["2", "3", "4"], a.lines = ["Linea 20", "Linea 25"], a.newWindowProperties = {}, a.newWindowProperties.numberFrames = a.numberFrames[0], a.newWindowProperties.line = a.lines[0], a.stickTypes = b.getWindowsPartsNames(), a.configurations = {}, a.configurations.stickType = a.stickTypes[0], a.equation = "", a.error = "";
    var g = 70,
        h = 45,
        i = 120,
        j = b.getWindows(),
        k = b.getConfig();
    a.gridOptions = { rowData: j, rowSelection: "single", angularCompileRows: !0, groupHeaders: !0, columnDefs: [{ field: "name", headerName: "Nombre", headerGroup: "Ventanas", editable: !1, width: 150, cellStyle: f("0, 0, 255") }, { field: "width", headerName: "Ancho", headerGroup: "Ventanas", editable: !1, width: 70, cellStyle: f("0, 0, 255") }, { field: "height", headerName: "Alto", headerGroup: "Ventanas", editable: !1, width: 70, cellStyle: f("0, 0, 255") }, { field: "wallLoss", headerName: "P/Pared", headerGroup: "Ventanas", editable: !1, width: 70, cellStyle: f("0, 0, 255") }, { field: "line", headerName: "Nº", headerGroup: "Linea", editable: !1, width: 70, cellStyle: f("255, 0, 0") }, { field: "numberFrames", headerName: "Cantidad", headerGroup: "Hojas", editable: !1, width: 70, cellStyle: f("0, 255, 0") }, { field: "rielSuperior", headerName: "Longitud", headerGroup: "Riel Superior", editable: !1, width: g, cellStyle: f("165, 42, 42"), valueGetter: "data.rielSuperior.long", cellRenderer: function(a) { return a.$scope.rielSuperior = "rielSuperior", a.$scope.data = a.data, '<div ng-click="showEquation(data, rielSuperior)">' + a.value + "</div>" } }, { field: "rielSuperior", headerName: "Nº", headerGroup: "Riel Superior", editable: !1, width: h, cellStyle: f("165, 42, 42"), valueGetter: "data.rielSuperior.quantity" }, { field: "rielInferior", headerName: "Longitud", headerGroup: "Riel Inferior", editable: !1, width: g, cellStyle: f("255, 165, 0"), valueGetter: "data.rielInferior.long", cellRenderer: function(a) { return a.$scope.rielInferior = "rielInferior", a.$scope.data = a.data, '<div ng-click="showEquation(data, rielInferior)">' + a.value + "</div>" } }, { field: "rielInferior", headerName: "Nº", headerGroup: "Riel Inferior", editable: !1, width: h, cellStyle: f("255, 165, 0"), valueGetter: "data.rielInferior.quantity" }, { field: "jamba", headerName: "Longitud", headerGroup: "Jamba", editable: !1, width: g, cellStyle: f("102, 0, 102"), valueGetter: "data.jamba.long", cellRenderer: function(a) { return a.$scope.jamba = "jamba", a.$scope.data = a.data, '<div ng-click="showEquation(data, jamba)">' + a.value + "</div>" } }, { field: "jamba", headerName: "Nº", headerGroup: "Jamba", editable: !1, width: h, cellStyle: f("102, 0, 102"), valueGetter: "data.jamba.quantity" }, { field: "pierna", headerName: "Longitud", headerGroup: "Pierna", editable: !1, width: g, cellStyle: f("204, 153, 0"), valueGetter: "data.pierna.long", cellRenderer: function(a) { return a.$scope.pierna = "pierna", a.$scope.data = a.data, '<div ng-click="showEquation(data, pierna)">' + a.value + "</div>" } }, { field: "pierna", headerName: "Nº", headerGroup: "Pierna", ditable: !1, width: h, cellStyle: f("204, 153, 0"), valueGetter: "data.pierna.quantity" }, { field: "gancho", headerName: "Longitud", headerGroup: "Gancho", editable: !1, width: g, cellStyle: f("102, 102, 255"), valueGetter: "data.gancho.long", cellRenderer: function(a) { return a.$scope.gancho = "gancho", a.$scope.data = a.data, '<div ng-click="showEquation(data, gancho)">' + a.value + "</div>" } }, { field: "gancho", headerName: "Nº", headerGroup: "Gancho", editable: !1, width: h, cellStyle: f("102, 102, 255"), valueGetter: "data.gancho.quantity" }, { field: "cabezalFijo", headerName: "Longitud", headerGroup: "Cabezal F.", editable: !1, width: g, cellStyle: f("255, 255, 0"), valueGetter: "data.cabezalFijo.long", cellRenderer: function(a) { return a.$scope.cabezalFijo = "cabezalFijo", a.$scope.data = a.data, '<div ng-click="showEquation(data, cabezalFijo)">' + a.value + "</div>" } }, { field: "cabezalFijo", headerName: "Nº", headerGroup: "Cabezal F.", editable: !1, width: h, cellStyle: f("255, 255, 0"), valueGetter: "data.cabezalFijo.quantity" }, { field: "socaloFijo", headerName: "Longitud", headerGroup: "Socalo F.", editable: !1, width: g, cellStyle: f("0, 153, 204"), valueGetter: "data.socaloFijo.long", cellRenderer: function(a) { return a.$scope.socaloFijo = "socaloFijo", a.$scope.data = a.data, '<div ng-click="showEquation(data, socaloFijo)">' + a.value + "</div>" } }, { field: "socaloFijo", headerName: "Nº", headerGroup: "Socalo F.", editable: !1, width: h, cellStyle: f("0, 153, 204"), valueGetter: "data.socaloFijo.quantity" }, { field: "cabezalCorredizo", headerName: "Longitud", headerGroup: "Cabezal C.", editable: !1, width: g, valueGetter: "data.cabezalCorredizo.long", cellStyle: f("153, 255, 51"), cellRenderer: function(a) { return a.$scope.cabezalCorredizo = "cabezalCorredizo", a.$scope.data = a.data, '<div ng-click="showEquation(data, cabezalCorredizo)">' + a.value + "</div>" } }, { field: "cabezalCorredizo", headerName: "Nº", headerGroup: "Cabezal C.", editable: !1, width: h, cellStyle: f("153, 255, 51"), valueGetter: "data.cabezalCorredizo.quantity" }, { field: "socaloCorredizo", headerName: "Longitud", headerGroup: "Socalo C.", editable: !0, width: g, cellStyle: f("102, 153, 153"), valueGetter: "data.socaloCorredizo.long", cellRenderer: function(a) { return a.$scope.socaloCorredizo = "socaloCorredizo", a.$scope.data = a.data, '<div ng-click="showEquation(data, socaloCorredizo)">' + a.value + "</div>" } }, { field: "socaloCorredizo", headerName: "Nº", headerGroup: "Socalo C.", editable: !1, width: h, cellStyle: f("102, 153, 153"), valueGetter: "data.socaloCorredizo.quantity" }] }, a.configGridOptions = { rowData: k, rowSelection: "single", columnDefs: [{ field: "property", headerName: "Propiedad", editable: !0, width: i, cellStyle: f("0, 0, 255") }, { field: "rielSuperior", headerName: "Riel Superior", editable: !0, width: i, cellStyle: f("165, 42, 42") }, { field: "rielInferior", headerName: "Riel Inferior", editable: !0, width: i, cellStyle: f("255, 165, 0") }, { field: "jamba", headerName: "Jamba", editable: !0, width: i, cellStyle: f("102, 0, 102") }, { field: "pierna", headerName: "Pierna", editable: !0, width: i, cellStyle: f("204, 153, 0") }, { field: "gancho", headerName: "Gancho", editable: !0, width: i, cellStyle: f("102, 102, 255") }, { field: "cabezal", headerName: "Cabezal", editable: !0, width: i, cellStyle: f("255, 255, 0") }, { field: "socalo", headerName: "Socalo", editable: !0, width: i, cellStyle: f("0, 153, 204") }] }, a.addNewWindow = function() {
        var b = c.newWindow(a.newWindowProperties.name, a.newWindowProperties.width, a.newWindowProperties.height, a.newWindowProperties.wallLoss, a.newWindowProperties.numberFrames, a.newWindowProperties.line);
        e(b), "" == a.error && (j.push(b), d.addGlass(b)), a.gridOptions.api.onNewRows()
    }, a.removeWindow = function() {
        var b = a.gridOptions.selectedRows[0],
            c = j.indexOf(b);
        j.splice(c, 1), a.gridOptions.api.onNewRows()
    }, a.saveData = function() { b.saveData(j, k) }, a.showEquation = function(b, c) { a.equation = b[c].equation }, a.addNewConfiguration = function() { k.push({ property: "Restos", rielSuperior: 0, rielInferior: 0, jamba: 0, pierna: 0, gancho: 0, cabezal: 0, socalo: 0 }), a.configGridOptions.api.onNewRows() }, a.removeConfiguration = function() {
        var b = a.configGridOptions.selectedRows[0],
            c = k.indexOf(b);
        config = k[c], config[type] = 0, a.configGridOptions.api.onNewRows()
    }
}]), angular.module("longCalculatorApp").directive("inputNumber", function() { return { restrict: "A", require: "ngModel", link: function(a, b, c, d) { d.$parsers.push(function(a) { if (void 0 == a) return ""; var b = a.replace(/[^0-9]/g, ""); return b != a && (d.$setViewValue(b), d.$render()), b }) } } }), angular.module("longCalculatorApp").directive("returnPress", function() { return function(a, b, c) { b.bind("keydown keypress", function(b) { 13 === b.which && (a.$apply(function() { a.$eval(c.returnPress) }), b.preventDefault()) }) } }), angular.module("longCalculatorApp").factory("windowsFactory", function() {
    return {
        newWindow: function(a, b, c, d, e, f) {
            var g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 1,
                p = 1,
                q = 2,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = "s",
                y = "s";
            return "Linea 20" == f ? (k = 12, l = 12, m = 24, n = 24, "2" == e ? (j = 6, h = 6) : "3" == e ? (i = 3, j = 10, g = 3, h = 10, x = "Cabezal Corredizo + " + i, y = "Socalo Corredizo + " + g) : "4" == e && (j = 5, h = 5)) : "Linea 25" == f && (k = 16, l = 16, m = 34, n = 34, "2" == e ? (j = 13, h = 13) : "3" == e ? (i = -3, j = 21, g = -3, h = 21, x = "Cabezal Corredizo " + i, y = "Socalo Corredizo " + g) : "4" == e && (j = 11, h = 11)), "2" == e ? (r = 2, s = 2, t = 1, u = 1, v = 1, w = 1, x = "(Riel Superior / " + e + ") + " + j, y = "(Riel Superior / " + e + ") + " + h) : "3" == e ? (r = 2, s = 4, t = 1, u = 2, v = 1, w = 2) : "4" == e && (r = 4, s = 4, t = 4, v = 4, t = 2, u = 2, v = 2, w = 2, x = "(Riel Superior / " + e + ") + " + j, y = "(Riel Superior / " + e + ") + " + h), { name: a, width: b, height: c, wallLoss: d, line: f, numberFrames: e, rielSuperior: { "long": b - d - k, quantity: o, equation: "Ancho - Perdida por Pared - " + k }, rielInferior: { "long": b - d - l, quantity: p, equation: "Ancho - Perdida por Pared - " + l }, jamba: { "long": c - d, quantity: q, equation: "Alto - Perdida por Pared" }, pierna: { "long": c - d - m, quantity: r, equation: "Jamba - " + m }, gancho: { "long": c - d - n, quantity: s, equation: "Jamba - " + n }, cabezalFijo: { "long": parseFloat(((b - d - k) / e + j + i).toFixed(1) / 1), quantity: t, equation: x }, cabezalCorredizo: { "long": ((b - d - k) / e + j).toFixed(1) / 1, quantity: u, equation: "(Riel Superior / " + e + ") + " + j }, socaloFijo: { "long": ((b - d - k) / e + h + g).toFixed(1) / 1, quantity: v, equation: y }, socaloCorredizo: { "long": ((b - d - k) / e + h).toFixed(1) / 1, quantity: w, equation: "(Riel Superior / " + e + ") + " + h } }
        }
    }
}), angular.module("longCalculatorApp").service("LongsSorter", function() {
    this.sortLongs = function(a, b) {
        var c = [],
            d = 0;
        if (0 != a.length) {
            var e = Array.prototype.slice.call(a);
            e.sort(function(a, b) { return b.value - a.value });
            for (; c.length !== a.length;) {
                var f = this.knapspack(e, b[d]);
                if (0 !== f.length) { Array.prototype.push.apply(c, f); for (var g = 0; g < f.length; g++) e.splice(e.indexOf(f[g]), 1) }
                d < b.length - 1 && d++
            }
            return c
        }
    }, this.getFirstLongToAdd = function(a, b) { for (var c = 0, d = {}; c < a.length && a[c].value > b;) c++; return c < a.length && (d = a[c]), d }, this.getLongsToAdd = function(a, b) {
        for (var c, d = 0, e = 0, f = []; e < a.length && a[e].value > b;) e++;
        if (e >= a.length) return f;
        for (; e < a.length;) d + a[e].value <= b && (d += a[e].value, f.push(a[e])), e++;
        c = b - d;
        var g = Array.prototype.slice.call(a).slice(e, a.length);
        for (e = 0; e < f.length;) {
            var h = this.getReplaceFor(f[e], g, c);
            if (h.length > 0) {
                var i = f[e];
                f = this.addRemoveLongs(f, h, [i]), g = this.addRemoveLongs(g, [i], h), c -= this.getSum(h) - i.value
            } else e++
        }
        for (e = 0; e < g.length;) {
            var j = this.getArrayToReplace(g[e], f, c);
            if (j.length > 0) {
                var i = g[e];
                f = this.addRemoveLongs(f, [i], j), g = this.addRemoveLongs(g, j, [i]), c -= i.value - this.getSum(j)
            } else e++
        }
        return f
    }, this.getReplaceFor = function(a, b, c) { for (var d = 0, e = [], f = a.value + c, g = 0; g < b.length;) d + b[g].value <= f && (d += b[g].value, e.push(b[g])), g++; return this.getSum(e) <= a.value && (e = []), e }, this.getArrayToReplace = function(a, b, c) { for (var d = 0, e = [], f = 0; f < b.length; f++) b[f].value < a.value && d + b[f].value < a.value && (d += b[f].value, e.push(b[f])); return a.value - this.getSum(e) > c && (e = []), e }, this.addRemoveLongs = function(a, b, c) { for (var d = Array.prototype.slice.call(a), e = 0; e < c.length; e++) d.splice(d.indexOf(c[e]), 1); for (var e = 0; e < b.length; e++) d.push(b[e]); return d.sort(function(a, b) { return b.value - a.value }), d }, this.getSum = function(a) { for (var b = 0, c = 0; c < a.length; c++) b += a[c].value; return b }, this.knapspack = function(a, b) {
        for (var c = [
                [0]
            ], d = [
                [0]
            ], e = [0], f = [1], g = 0, h = 0; h < a.length; h++) e[h + 1] = e[h] + 1, f[h + 1] = 2 * f[h];
        for (var h = 0; h < e[a.length]; h++) c[0][h + 1] = d[0][h + 1] = 0;
        for (var i = 10 * b, j = 1; i >= j; j++) {
            c[j] = [0], d[j] = [0];
            for (var h = 0; h < a.length; h++)
                for (var k = 1, l = e[h], m = 1; k >= m; m++) {
                    var n = 10 * m * a[h].value,
                        o = j >= n ? 1 : 0,
                        p = o * m * 10 * a[h].value,
                        q = l + m,
                        r = j - o * n,
                        s = m * f[h] + d[r][l];
                    c[j][q] = Math.max(c[j][q - 1], p + c[r][l]), g = d[j][q] = c[j][q] > c[j][q - 1] ? s : d[j][q - 1]
                }
        }
        for (var t = [], h = a.length - 1; h >= 0; h--) t[h] = Math.floor(g / f[h]), g -= t[h] * f[h];
        for (var u = [], v = 0; v < t.length; v++) 0 != t[v] && u.push(a[v]);
        return u
    }
}), angular.module("longCalculatorApp").service("cutsInfo", [function() {
    function a(a) { for (var b = [], c = a.length, d = 0; c > d; d++) b.push({ name: a[d].name, value: parseInt(a[d]["long"]) }); return b }

    function b(a) { var b = a.replace(/\s+/g, ""); return b.substr(0, 1).toLowerCase() + b.substr(1, b.length) }
    this.cuts = [], this.configuration = [{ property: "Long. barras", longitud: 5980 }], this.addCut = function(a) { this.cuts.push({ name: a.name, "long": a["long"] }) }, this.getCuts = function() { return this.cuts }, this.getConfig = function() { return this.configuration }, this.getPartsNames = function() { return ["Longitud"] }, this.saveData = function(a, b) { this.cuts = a, this.configuration = b }, this.getSticksSizes = function(a) { for (var c = b(a), d = [], e = 0; e < this.configuration.length; e++) d.push(parseInt(this.configuration[e][c])); return d }, this.getLongs = function(b) { var c = a(this.cuts); return c }
}]), angular.module("longCalculatorApp").service("glassesInfo", function() {
    function a(a) { "Linea 20" === a.line ? "2" == a.numberFrames || "4" == a.numberFrames ? (e = a.socaloFijo["long"] - 59, f = a.pierna["long"] - 86, g = a.socaloFijo.quantity, b = e, c = f, d = a.socaloCorredizo.quantity) : "3" == a.numberFrames && (e = a.socaloFijo["long"] - 35, f = a.pierna["long"] - 86, g = a.socaloFijo.quantity, b = a.socaloCorredizo["long"] - 54, c = f, d = a.socaloCorredizo.quantity) : "Linea 25" == a.line && ("2" == a.numberFrames || "4" == a.numberFrames ? (e = a.socaloFijo["long"] - 72, f = a.pierna["long"] - 96, g = a.socaloFijo.quantity, b = e, c = f, d = a.socaloCorredizo.quantity) : "3" == a.numberFrames && (e = a.socaloFijo["long"] - 60, f = a.pierna["long"] - 96, g = a.socaloFijo.quantity, b = a.socaloCorredizo["long"] - 72, c = f, d = a.socaloCorredizo.quantity)) }
    this.glasses = [];
    var b, c, d, e, f, g, h = 1;
    this.addGlass = function(i) { a(i), this.glasses.push({ id: h, name: i.name, widthSlidingWindowGlass: b, heightSlidingWindowGlass: c, partsSlidingWindowGlass: d, widthFixedWindowGlass: e, heightFixedWindowGlass: f, partsFixedWindowGlass: g }), h++ }, this.getGlasses = function() { return this.glasses }, this.prueba = function(i) {
        for (var j = 0; j < i.length; j++) {
            var k = i[j];
            a(k), this.glasses.push({ id: h, name: k.name, widthSlidingWindowGlass: b, heightSlidingWindowGlass: c, partsSlidingWindowGlass: d, widthFixedWindowGlass: e, heightFixedWindowGlass: f, partsFixedWindowGlass: g }), h++
        }
    }
}), angular.module("longCalculatorApp").service("windowsInfo", ["windowsFactory", "glassesInfo", function(a, b) {
    function c(a) {
        for (var b = [], c = a.length, d = 0; c > d; d++)
            if (1 !== a[d].quantity)
                for (var e = a[d].quantity, f = 0; e > f; f++) b.push({ name: a[d].fixedName, value: a[d].value });
            else b.push({ name: a[d].fixedName, value: a[d].value });
        return b
    }

    function d(a) { var b = a.replace(/\s+/g, ""); return b.substr(0, 1).toLowerCase() + b.substr(1, b.length) }
    this.windows = [], this.getWindowsPartsNames = function() { return ["Riel Superior", "Riel Inferior", "Jamba", "Pierna", "Gancho", "Cabezal", "Socalo"] }, this.configuration = [{ property: "Long. barras", rielSuperior: 5980, rielInferior: 5980, jamba: 5980, pierna: 5980, gancho: 5980, cabezal: 5980, socalo: 5980 }], this.updateConfig = function(a, b) {
        var c = d(a);
        this.sticksSizes[c] = b
    }, this.getWindows = function() { return this.windows }, this.getNames = function() { return _.pluck(this.windows, "name") }, this.getConfig = function() { return this.configuration }, this.getSticksSizes = function(a) { for (var b = d(a), c = [], e = 0; e < this.configuration.length; e++) c.push(parseInt(this.configuration[e][b])); return c }, this.getLongs = function(a) {
        var b, c = d(a);
        if ("cabezal" !== c && "socalo" !== c) b = this.getLongObjectsByPropertyKey(c, "");
        else {
            b = this.getLongObjectsByPropertyKey(c + "Corredizo", " corr");
            var e = this.getLongObjectsByPropertyKey(c + "Fijo", " fijo");
            Array.prototype.push.apply(b, e)
        }
        return b
    }, this.addWindow = function(a) { this.windows.push(a) }, this.getLongObjectsByPropertyKey = function(a, b) {
        var d = _.map(this.windows, function(c) { return c.value = c[a]["long"], c.quantity = c[a].quantity, c.fixedName = c.name + b, _.pick(c, "fixedName", "value", "quantity") }),
            e = c(d);
        return _.filter(e, function(a) { return a.value })
    }, this.saveData = function(a, b) { this.windows = a, this.configuration = b }
}]);